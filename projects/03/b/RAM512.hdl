// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // Put your code here:
	DMux8Way(in=load,sel=address[6..8],a=lRAM0,b=lRAM1,c=lRAM2,d=lRAM3,e=lRAM4,f=lRAM5,g=lRAM6,h=lRAM7);

	RAM64(in=in,load=lRAM0,address=address[0..5],out=RAM0);
	RAM64(in=in,load=lRAM1,address=address[0..5],out=RAM1);
	RAM64(in=in,load=lRAM2,address=address[0..5],out=RAM2);
	RAM64(in=in,load=lRAM3,address=address[0..5],out=RAM3);
	RAM64(in=in,load=lRAM4,address=address[0..5],out=RAM4);
	RAM64(in=in,load=lRAM5,address=address[0..5],out=RAM5);
	RAM64(in=in,load=lRAM6,address=address[0..5],out=RAM6);
	RAM64(in=in,load=lRAM7,address=address[0..5],out=RAM7);

	Mux8Way16(a=RAM0,b=RAM1,c=RAM2,d=RAM3,e=RAM4,f=RAM5,g=RAM6,h=RAM7,sel=address[6..8],out=out);

}
